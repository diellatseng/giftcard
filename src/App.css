:root {
	--main-background: linear-gradient(64.5deg, #f575b9 14.7%, #5961df 88.7%);
}

body {
	overflow: hidden;
}

.App {
	display: flex;
	min-height: 100vh;
	text-align: center;
	font-size: 16px;
	background-image: var(--main-background);
}

.ReactCodeInput {
	display: none !important;
}

.ReactCodeInput_mobile {
	width: 100%;
	position: fixed;
	top: 45%;
	left: 50%;
	transform: translate(-50%, -50%);
}
.ReactCodeInput_mobile-text {
	color: rgba(0, 0, 0, 0.3);
}

.ReactCodeInput_mobile-btn {
	position: relative;
	top: 1rem;
	align-items: center;
	appearance: none;
	background: #00000017;
	border: none;
	border-radius: 6px;
	box-shadow: #2d234266 0 2px 4px, #2d23424d 0 7px 13px -3px,
		#3a416f80 0 -3px 0 inset;
	box-sizing: border-box;
	color: rgba(255, 255, 255);
	cursor: pointer;
	display: inline-flex;
	height: 1.5rem;
	justify-content: center;
	line-height: 1;
	list-style: none;
	overflow: hidden;
	padding: 1.3rem 1.5rem;
	text-align: left;
	text-decoration: none;
	transition: box-shadow 0.15s, transform 0.15s;
	user-select: none;
	-webkit-user-select: none;
	touch-action: manipulation;
	white-space: nowrap;
	will-change: box-shadow, transform;
	font-family: inherit;
	font-size: 1rem;
}

.ReactCodeInput_mobile-btn:active {
	box-shadow: none;
	transform: translateY(2px);
}

@media (min-width: 1300px) {
	.ReactCodeInput {
		display: inline-block !important;
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
	.ReactCodeInput_mobile-text {
		display: none;
	}
	.ReactCodeInput_mobile-btn {
		display: none;
	}
	.ReactCodeInput > input {
		width: 1.5rem;
		height: 1.5rem;
		margin: 1rem;
		padding: 1.5rem;
		font-size: 2rem;
		font-family: monospace;
		text-align: center;
		appearance: textfield;
		-webkit-appearance: textfield;
		-moz-appearance: textfield;
		border-radius: 3px;
		border-style: solid;
		border-width: 2px;
		transition-property: background, box-shadow;
		transition-duration: 1500ms;
		transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
	}

	.ReactCodeInput > input:hover {
		cursor: pointer;
		background: rgb(157, 82, 207) !important;
	}

	.ReactCodeInput > input:focus-visible {
		outline: none;
		-webkit-box-shadow: rgba(255, 252, 249, 0.15) 0px 30px 35px,
			rgba(255, 252, 249, 0.15) 0px -30px 35px;
		-moz-box-shadow: rgba(255, 252, 249, 0.15) 0px 30px 35px,
			rgba(255, 252, 249, 0.15) 0px -30px 35px;
		box-shadow: rgba(255, 252, 249, 0.15) 0px 30px 35px,
			rgba(255, 252, 249, 0.15) 0px -30px 35px;
		background: rgb(157, 82, 207) !important;
	}

	.ReactCodeInput > input:nth-child(1) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards 0ms;
	}

	.ReactCodeInput > input:nth-child(2) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards
			150ms;
	}

	.ReactCodeInput > input:nth-child(3) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards
			300ms;
	}

	.ReactCodeInput > input:nth-child(4) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards
			450ms;
	}

	.ReactCodeInput > input:nth-child(5) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards
			600ms;
	}
	.ReactCodeInput > input:nth-child(6) {
		animation: fadeIn 700ms cubic-bezier(0.41, 0.82, 0.42, 1.3) forwards
			750ms;
	}

	@keyframes fadeIn {
		0% {
			transform: translateY(-60px);
			opacity: 0;
		}
		100% {
			transform: translateY(0px);
			opacity: 1;
		}
	}
}
